################ UPLOAD DE ARQUIVOS 
//instalar a dependencia para lidar com multipart form data (multer)
yarn add multer
//criar na raiz do projeto uma pasta temp e dentro dela uma pasta uploads
// criar novo arquivo chamado multer.js na pasta src/config
// configurar o multer.js

//importar o multer nas rotas
//editar arquivo de rotas

//criar um controlador para os arquivos
//criar nova migration para os arquivos e aplicar as migrations criadas
//criar novo model para os arquivos
//editar arquivo index.js em src/database para adicionar o model

//criar nova migration para adicionar campo de relacionamento na tabela de usuarios
yarn sequelize migration:create --name=add-avatar-field-to-users
//aplicar o migrate
yarn sequelize db:migrate

//alteração no modelo de usuário para relacionar com a tabela de arquivos

//alterar novamente arquivo index.js em src/database para utilizar o metodo associate

#################### LISTAGEM DE PRESTADORES DE SERVIÇO

//Novo controller
//Alteração no model de usuarios para adicionar apelido ao campo File
//Nova alteração no Model File para incluir campo virtual
//alteração em app.js para servir arquivos estaticos com o express.static 

################## MIGRATION E MODEL AGENDAMENTOS
//criar nova migration
yarn sequelize migration:create --name=create-appointments

################# REALIZAÇÃO DE AGENDAMENTOS
//criar o controlador de agendamentos e realizar configurações

################## Validações de DATA nos AGENDAMENTOS
//instalar nova dependencia date-fns em sua ultima versão
yarn add date-fns@next
//realizar verificações

################## Listagem dos agendamentos de usuário
// criação no controlador do método index

################ Agendamentos do Prestador de serviços
// novo controller ScheduleController

################ Configurando MongoDB
//baixar imagem do mongo(se necessário)
docker pull mongo 
//criar novo cluster no docker
docker run --name mongobarber -p 27017:27017 -d -t mongo
//adicionar dependencia do mongoose
yarn add mongoose
//realizar configurações no index.js dentro de src/database

################# Schema de Notificações
//nova pasta chamada schemas na pasta src/app
//criar o novo schema
//importar novo schema no controlador de Appointments
//realizar configurações, novas importações do datefns

###################### Listagem de notificações
//nova rota para listagem
//novo controlador para Notificações

##################### Cancelamento de notificações
//nova rota para delete
//novo método no controlador de appointments

##################### Configurações Envio de E-mail
// nova dependencia - Nodemailer
yarn add nodemailer
//novo arquivo na pasta config chamado mail.js
//configurações de Mailtrap(para desenvolvimento)
https://mailtrap.io << página
//nova pasta em /src chamada lib
//novo arquivo em /src/lib chamado Mail.js
//alterações no appointmentController

########################## Templates de E-mail
//duas novas dependencias
yarn add express-handlebars nodemailer-express-handlebars
//configurações e altereções no arquivo Mail.js em lib
//novas pastas em app:  src/app/views  src/app/views/emails  src/app/views/emails/layouts
// src/app/views/emails/partials
// novo arquivo em src/app/views/emails chamado cancellation.hbs
// novo arquivo em src/app/views/emails/layouts chamado default.hbs
// novo arquivo em src/app/views/emails/partials chamado footer.hbs
// configurações do email de cancelamento no arquivo cancellation.hbs
// configurações do método delete no AppointmentController

#################### Configurações de Filas (REDIS)
// nova instalação no docker
docker run --name redisbarber -p 6379:6379 -d -t redis:alpine
//nova dependencia bee-queue
yarn add bee-queue
//novo arquivo Queue.js em src/libs
//nova pasta em src/app/jobs
//novo arquivo em src/app/jobs chamado CancellationMail.js
//novo arquivo em src/config chamado redis.js
//alterações do método delete no AppointmentController
//novo arquivo em /src chamado queue.js
//novo script no packet.json para rodar a queue separada do servidor, rodar com o comando 'yarn queue'


####################### Checando horários disponíveis
// nova rota 
// novo controlador AvailableController

####################### Campos virtuais nos agendamentos
// alteração do model de Appointment
// alteração no INDEX do AppointmentController para retornar os novos campos

###################### Tratando Exceções
// utilização do Sentry (sentry.io)
// cadastrar ou fazer login, criar projeto (no caso um projeto em express)
// utilizar as instruções para adicionar dependencia
yarn add @sentry/node@5.7.1
// alterações no arquivo app.js da pasta /src
// novo arquivo na pasta src/config chamado sentry.js
// nova dependencia EXPRESS-ASYNC-ERRORS
yarn add express-async-errors
// novo middleware em app.js
// nova dependencia YOUCH
yarn add youch

##################### Variáveis de ambiente
// novo arquivo em raiz chamado .env
// adicionar o arquivo ao gitignore
// nova dependencia dotenv
// importar dotenv em app.js
// importar dotenv em queue.js
// importar dotenv em /src/config/database.js

##################### Utilizando variáveis de ambiente
// primeiro em src/app/models/File.js
// condição para retorno dos erros em exceptionHandler() em app.js
// agora em src/config/auth.js
// postgres em src/config/database.js
// mongo em src/database/index.js
// redis em src/config/redis.js
// email em src/config/mail.js
// sentry em src/config/sentry.js
// criar arquivo na raiz .env.example sem as informações sensíveis